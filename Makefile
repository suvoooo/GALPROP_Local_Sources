# Makefile.in generated by automake 1.14.1 from Makefile.am.
# source/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



###########################################################################
# Global part
###########################################################################




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/galprop
pkgincludedir = $(includedir)/galprop
pkglibdir = $(libdir)/galprop
pkglibexecdir = $(libexecdir)/galprop
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/Makefile.am.common $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/depcomp \
	$(libgalprop_a_include_HEADERS) $(libskymap_a_include_HEADERS) \
	$(top_srcdir)/test-driver
TESTS =
XFAIL_TESTS =
check_PROGRAMS =
bin_PROGRAMS = galprop$(EXEEXT) changeGasMaps$(EXEEXT)
subdir = source
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(libgalprop_a_includedir)" \
	"$(DESTDIR)$(libskymap_a_includedir)" \
	"$(DESTDIR)$(includedir)"
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libgalprop_a_AR = $(AR) $(ARFLAGS)
libgalprop_a_LIBADD =
am_libgalprop_a_OBJECTS = B_field_model.$(OBJEXT) Configure.$(OBJEXT) \
	D_pp.$(OBJEXT) D_xx.$(OBJEXT) Distribution.$(OBJEXT) \
	GalacticRadiationField.$(OBJEXT) RadiationField.$(OBJEXT) \
	Galaxy.$(OBJEXT) Galdef.$(OBJEXT) Galprop.$(OBJEXT) \
	He_to_H_CS.$(OBJEXT) IC_anisotropy_factor.$(OBJEXT) \
	Particle.$(OBJEXT) WNEWTR_FUNC_aws.$(OBJEXT) \
	YIELDX_011000_imos.$(OBJEXT) antiproton.$(OBJEXT) \
	blattnig.$(OBJEXT) bremss_spec.$(OBJEXT) cfactor.$(OBJEXT) \
	cr_luminosity.$(OBJEXT) create_SNR.$(OBJEXT) \
	create_galaxy.$(OBJEXT) create_gcr.$(OBJEXT) \
	create_transport_arrays.$(OBJEXT) crn6.$(OBJEXT) \
	decayed_cross_sections.$(OBJEXT) e_KN_loss.$(OBJEXT) \
	e_loss_compton.$(OBJEXT) electrons_normalize.$(OBJEXT) \
	energy_losses.$(OBJEXT) eprop.$(OBJEXT) \
	fort_interface1.$(OBJEXT) fort_interface2.$(OBJEXT) \
	gauss.$(OBJEXT) gen_DM_skymap.$(OBJEXT) \
	gen_DM_source.$(OBJEXT) gen_IC_emiss.$(OBJEXT) \
	gen_IC_skymap.$(OBJEXT) gen_bremss_emiss.$(OBJEXT) \
	gen_bremss_ionized_skymap.$(OBJEXT) \
	gen_bremss_skymap.$(OBJEXT) gen_ionization_rate.$(OBJEXT) \
	gen_isrf_energy_density.$(OBJEXT) \
	gen_knock_on_electron_source.$(OBJEXT) \
	gen_pi0_decay_emiss.$(OBJEXT) gen_pi0_decay_skymap.$(OBJEXT) \
	gen_secondary_antiproton_source.$(OBJEXT) \
	gen_secondary_positron_source.$(OBJEXT) \
	gen_secondary_proton_source.$(OBJEXT) \
	gen_secondary_source.$(OBJEXT) gen_synch_emiss.$(OBJEXT) \
	gen_synch_skymap.$(OBJEXT) \
	gen_tertiary_antiproton_source.$(OBJEXT) integ.$(OBJEXT) \
	inter.$(OBJEXT) ionization_bethe.$(OBJEXT) \
	isrf_energy_density.$(OBJEXT) kamae.$(OBJEXT) \
	Kcapture_cs.$(OBJEXT) kinematic.$(OBJEXT) nH.$(OBJEXT) \
	nuc_package.$(OBJEXT) nuclei_normalize.$(OBJEXT) \
	nucleon_cs.$(OBJEXT) pp_meson.$(OBJEXT) print_BC.$(OBJEXT) \
	propagate_particles.$(OBJEXT) propel.$(OBJEXT) \
	propel_diagnostics.$(OBJEXT) protri.$(OBJEXT) \
	read_gcr.$(OBJEXT) read_isrf.$(OBJEXT) read_gas_maps.$(OBJEXT) \
	SkymapFitsio.$(OBJEXT) \
	sigma_boron_dec_heinbach_simon.$(OBJEXT) \
	source_SNR_event.$(OBJEXT) source_SNR_event_vec.$(OBJEXT) \
	source_distribution.$(OBJEXT) store_DM_emiss.$(OBJEXT) \
	store_DM_skymap.$(OBJEXT) store_IC_skymap.$(OBJEXT) \
	store_IC_skymap_comp.$(OBJEXT) \
	store_bremss_H2R_skymap.$(OBJEXT) \
	store_bremss_HIR_skymap.$(OBJEXT) store_bremss_emiss.$(OBJEXT) \
	store_bremss_ionized_skymap.$(OBJEXT) \
	store_bremss_skymap.$(OBJEXT) \
	store_bremss_HII_skymap.$(OBJEXT) \
	store_pi0_decay_HII_skymap.$(OBJEXT) store_gcr.$(OBJEXT) \
	store_gcr_full.$(OBJEXT) store_ionization_rate.$(OBJEXT) \
	store_mapcube_skymap.$(OBJEXT) \
	store_pi0_decay_H2R_skymap.$(OBJEXT) \
	store_pi0_decay_HIR_skymap.$(OBJEXT) store_IC_emiss.$(OBJEXT) \
	store_pi0_decay_emiss.$(OBJEXT) \
	store_pi0_decay_skymap.$(OBJEXT) store_skymap.$(OBJEXT) \
	store_synch_skymap.$(OBJEXT) synchrotron.$(OBJEXT) \
	test_Distribution.$(OBJEXT) test_Particle.$(OBJEXT) \
	test_float_accuracy.$(OBJEXT) test_isotope_cs.$(OBJEXT) \
	test_nH.$(OBJEXT) test_source_SNR_event.$(OBJEXT) \
	test_suite.$(OBJEXT) tridag.$(OBJEXT) tridag_ext.$(OBJEXT) \
	tridag_sym.$(OBJEXT) tridag_sym_ext.$(OBJEXT) \
	ErrorLogger.$(OBJEXT) GCR_data.$(OBJEXT) \
	calculate_GCR_chisq.$(OBJEXT) B_field_3D_model.$(OBJEXT) \
	synchrotron_emissivity.$(OBJEXT) \
	synchrotron_emissivity_B_field.$(OBJEXT) \
	synchrotron_emissivity_aws.$(OBJEXT) \
	test_sync_package.$(OBJEXT) store_synch_emiss.$(OBJEXT) \
	galprop_internal.$(OBJEXT) gen_luminosity.$(OBJEXT) \
	Timer.$(OBJEXT) store_gcr_source_functions.$(OBJEXT) \
	DistributionFunction.$(OBJEXT) GasFunction.$(OBJEXT) \
	GasEmissFunction.$(OBJEXT) los_integration.$(OBJEXT) \
	AvXCO.$(OBJEXT)
libgalprop_a_OBJECTS = $(am_libgalprop_a_OBJECTS)
libskymap_a_AR = $(AR) $(ARFLAGS)
libskymap_a_LIBADD =
am_libskymap_a_OBJECTS = Coordinate.$(OBJEXT) \
	HealpixBaseExtended.$(OBJEXT) Region.$(OBJEXT) \
	SkySelection.$(OBJEXT) Skymap.$(OBJEXT)
libskymap_a_OBJECTS = $(am_libskymap_a_OBJECTS)
PROGRAMS = $(bin_PROGRAMS)
am_changeGasMaps_OBJECTS = changeGasMaps.$(OBJEXT)
changeGasMaps_OBJECTS = $(am_changeGasMaps_OBJECTS)
changeGasMaps_DEPENDENCIES = libgalprop.a libskymap.a
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_galprop_OBJECTS = galpropMain.$(OBJEXT)
galprop_OBJECTS = $(am_galprop_OBJECTS)
galprop_DEPENDENCIES = libgalprop.a libskymap.a
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_$(V))
am__v_F77_ = $(am__v_F77_$(AM_DEFAULT_VERBOSITY))
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_$(V))
am__v_F77LD_ = $(am__v_F77LD_$(AM_DEFAULT_VERBOSITY))
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libgalprop_a_SOURCES) $(libskymap_a_SOURCES) \
	$(changeGasMaps_SOURCES) $(galprop_SOURCES)
DIST_SOURCES = $(libgalprop_a_SOURCES) $(libskymap_a_SOURCES) \
	$(changeGasMaps_SOURCES) $(galprop_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(libgalprop_a_include_HEADERS) \
	$(libskymap_a_include_HEADERS) \
	$(nobase_nodist_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/suvo/install/galprop-54.1.984_okada/missing aclocal-1.14
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/suvo/install/galprop-54.1.984_okada/missing autoconf
AUTOHEADER = ${SHELL} /home/suvo/install/galprop-54.1.984_okada/missing autoheader
AUTOMAKE = ${SHELL} /home/suvo/install/galprop-54.1.984_okada/missing automake-1.14
AWK = gawk
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=gcc3
CCASFLAGS = -g -O2
CCDEPMODE = depmode=gcc3
CCFITS_CPPFLAGS = -I/home/suvo/install/binary/binaryCCfits/include
CCFITS_HOME = /home/suvo/install/binary/binaryCCfits
CCFITS_LIBS = -L/home/suvo/install/binary/binaryCCfits/lib -lCCfits
CFITSIO_CPPFLAGS = -I/home/suvo/install/binary/binarycfitsio/include
CFITSIO_HOME = /home/suvo/install/binary/binarycfitsio
CFITSIO_LIBS = -L/home/suvo/install/binary/binarycfitsio/lib -lcfitsio
CFLAGS = -g -O2
CLHEPHOME = /home/suvo/install/binary/binaryclhep
CLHEP_CPPFLAGS = -I/home/suvo/install/binary/binaryclhep/include
CLHEP_LDFLAGS = -L/home/suvo/install/binary/binaryclhep/lib -lCLHEP
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -pipe -O3 -Wall -fopenmp
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = gfortran
FFLAGS = -g -pipe -O3 -Wall -fopenmp
FGREP = /bin/grep -F
FITSDATA_PATH = /home/suvo/install/galprop-54.1.984_new1/FITS
FLIBS =  -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. -lgfortran -lm -lquadmath
GALDEF_PATH = /home/suvo/install/galprop-54.1.984_okada/GALDEF
GREP = /bin/grep
GSL_CPPFLAGS = -I/home/suvo/install/binary/binarygsl/include
GSL_HOME = /home/suvo/install/binary/binarygsl
GSL_LIBS = -L/home/suvo/install/binary/binarygsl/lib -lgsl -lgslcblas -lm
HEALPIX_CPPFLAGS = -I/home/suvo/install/Healpix_2.20a/src/cxx/generic_gcc/include
HEALPIX_HOME = /home/suvo/install/Healpix_2.20a/src/cxx/generic_gcc
HEALPIX_LIBS = -L/home/suvo/install/Healpix_2.20a/src/cxx/generic_gcc/lib -lhealpix_cxx -lcxxsupport -lfftpack
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS =   -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. -lgfortran -lm -lquadmath -L/home/suvo/install/binary/binarycfitsio/lib -lcfitsio -L/home/suvo/install/binary/binaryCCfits/lib -lCCfits -L/home/suvo/install/Healpix_2.20a/src/cxx/generic_gcc/lib -lhealpix_cxx -lcxxsupport -lfftpack  -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. -lgfortran -lm -lquadmath \
	-L/home/suvo/install/binary/binarygsl/lib -lgsl -lgslcblas -lm -L/home/suvo/install/binary/binaryclhep/lib -lCLHEP $(am__empty)
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/suvo/install/galprop-54.1.984_okada/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = galprop
PACKAGE_BUGREPORT = 
PACKAGE_NAME = GalProp
PACKAGE_STRING = GalProp 54.1.984
PACKAGE_TARNAME = galprop
PACKAGE_URL = 
PACKAGE_VERSION = 54.1.984
PATH_SEPARATOR = :
PLATFORM_LD_LIBRARY_PATH = LD_LIBRARY_PATH
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 54.1.984
abs_builddir = /home/suvo/install/galprop-54.1.984_okada/source
abs_srcdir = /home/suvo/install/galprop-54.1.984_okada/source
abs_top_builddir = /home/suvo/install/galprop-54.1.984_okada
abs_top_srcdir = /home/suvo/install/galprop-54.1.984_okada
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = /home/suvo/install/galprop-54.1.984_okada/out_FITS
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/suvo/install/galprop-54.1.984_okada/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/suvo/install/galprop-54.1.984_okada/source
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#
# Common head for all Makefile.am s
#
AM_CPPFLAGS = -I$(top_builddir) -I$(top_builddir)/include \
	-I/home/suvo/install/binary/binarycfitsio/include -I/home/suvo/install/binary/binaryCCfits/include -I/home/suvo/install/Healpix_2.20a/src/cxx/generic_gcc/include \
	-I/home/suvo/install/binary/binaryclhep/include -I/home/suvo/install/binary/binarygsl/include \
	-DGALDEF_PATH=\"$(GALDEF_PATH)\" \
	-DFITSDATA_PATH=\"$(FITSDATA_PATH)\" -DDATA_PATH=\"/home/suvo/install/galprop-54.1.984_okada/out_FITS\"
nobase_nodist_include_HEADERS = 
EXTRA_DIST = barpol.dat eval_iso_cs.dat isotope_cs.dat j0zero500.dat \
	nucdata.dat p_cs_fits.dat WNEWTR_082693.CDR.dat GCR_data_1.dat

# cleanup
MOSTLYCLEANFILES = 
DISTCLEANFILES = 
ACLOCAL_AMFLAGS = -I m4
lib_LIBRARIES = libgalprop.a libskymap.a
libskymap_a_SOURCES = Coordinate.cc HealpixBaseExtended.cc Region.cc SkySelection.cc Skymap.cc
libskymap_a_Headers = Skymap.h Coordinate.h HealpixBaseExtended.h Region.h SkySelection.h ArraySlice.h
libskymap_a_includedir = $(includedir)
libskymap_a_include_HEADERS = Skymap.h Coordinate.h HealpixBaseExtended.h Region.h SkySelection.h ArraySlice.h
libgalprop_a_SOURCES = B_field_model.cc Configure.cc D_pp.cc D_xx.cc \
Distribution.cc GalacticRadiationField.cc RadiationField.cc Galaxy.cc \
Galdef.cc Galprop.cc He_to_H_CS.cc IC_anisotropy_factor.cc Particle.cc \
WNEWTR_FUNC_aws.f YIELDX_011000_imos.f antiproton.f blattnig.cc bremss_spec.f \
cfactor.f cr_luminosity.cc create_SNR.cc create_galaxy.cc create_gcr.cc \
create_transport_arrays.cc crn6.f decayed_cross_sections.cc e_KN_loss.cc \
e_loss_compton.f electrons_normalize.cc energy_losses.cc eprop.cc \
fort_interface1.cc fort_interface2.cc gauss.cc gen_DM_skymap.cc \
gen_DM_source.cc gen_IC_emiss.cc gen_IC_skymap.cc gen_bremss_emiss.cc \
gen_bremss_ionized_skymap.cc gen_bremss_skymap.cc gen_ionization_rate.cc \
gen_isrf_energy_density.cc gen_knock_on_electron_source.cc \
gen_pi0_decay_emiss.cc gen_pi0_decay_skymap.cc \
gen_secondary_antiproton_source.cc gen_secondary_positron_source.cc \
gen_secondary_proton_source.cc gen_secondary_source.cc gen_synch_emiss.cc \
gen_synch_skymap.cc gen_tertiary_antiproton_source.cc integ.cc inter.f \
ionization_bethe.cc isrf_energy_density.cc kamae.cc Kcapture_cs.cc \
kinematic.cc nH.cc nuc_package.cc nuclei_normalize.cc nucleon_cs.cc \
pp_meson.f print_BC.cc propagate_particles.cc propel.cc propel_diagnostics.cc \
protri.cc read_gcr.cc read_isrf.cc read_gas_maps.cc SkymapFitsio.cc \
sigma_boron_dec_heinbach_simon.cc source_SNR_event.cc source_SNR_event_vec.cc \
source_distribution.cc store_DM_emiss.cc store_DM_skymap.cc \
store_IC_skymap.cc store_IC_skymap_comp.cc store_bremss_H2R_skymap.cc \
store_bremss_HIR_skymap.cc store_bremss_emiss.cc \
store_bremss_ionized_skymap.cc store_bremss_skymap.cc \
store_bremss_HII_skymap.cc store_pi0_decay_HII_skymap.cc \
store_gcr.cc store_gcr_full.cc store_ionization_rate.cc \
store_mapcube_skymap.cc store_pi0_decay_H2R_skymap.cc \
store_pi0_decay_HIR_skymap.cc store_IC_emiss.cc \
store_pi0_decay_emiss.cc store_pi0_decay_skymap.cc \
store_skymap.cc store_synch_skymap.cc synchrotron.f test_Distribution.cc \
test_Particle.cc test_float_accuracy.cc test_isotope_cs.cc \
test_nH.cc test_source_SNR_event.cc test_suite.cc tridag.cc tridag_ext.cc \
tridag_sym.cc tridag_sym_ext.cc ErrorLogger.cc GCR_data.cc \
calculate_GCR_chisq.cc B_field_3D_model.cc synchrotron_emissivity.cc \
synchrotron_emissivity_B_field.cc synchrotron_emissivity_aws.cc \
test_sync_package.cc store_synch_emiss.cc galprop_internal.cc \
gen_luminosity.cc Timer.cc store_gcr_source_functions.cc \
DistributionFunction.cc GasFunction.cc GasEmissFunction.cc los_integration.cc \
AvXCO.cc

libgalprop_a_Headers = Configure.h Distribution.h Galaxy.h Galdef.h Galprop.h \
Particle.h Spectrum.h constants.h \
fort_interface.h fort_interface1.h fort_interface2.h \
galprop_internal.h galprop_classes.h \
Units.h PhysicalConstants.h GalacticRadiationField.h RadiationField.h \
GCR_data.h synchrotron_emissivity_aws.h \
synchrotron_emissivity_B_field.h synchrotron_emissivity.h B_field_3D_model.h \
Singleton.h Timer.h DistributionFunction.h los_integration.h integ.h \
AmrData.h StellarGeometryDistributions.h SkymapFitsio.h ErrorLogger.h

galprop_SOURCES = galpropMain.cc 
galprop_LDADD = libgalprop.a libskymap.a
changeGasMaps_SOURCES = changeGasMaps.cc
changeGasMaps_LDADD = libgalprop.a libskymap.a
libgalprop_a_includedir = $(includedir)
libgalprop_a_include_HEADERS = Configure.h Distribution.h Galaxy.h Galdef.h \
Galprop.h Particle.h Spectrum.h constants.h \
fort_interface.h fort_interface1.h fort_interface2.h galprop_internal.h \
galprop_classes.h Units.h PhysicalConstants.h GalacticRadiationField.h \
RadiationField.h SkymapFitsio.h \
ArraySlice.h GCR_data.h \
synchrotron_emissivity_aws.h synchrotron_emissivity_B_field.h \
synchrotron_emissivity.h B_field_3D_model.h Singleton.h Timer.h \
DistributionFunction.h los_integration.h integ.h \
ArmData.h StellarGeometryDistributions.h ErrorLogger.h

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .f .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign source/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign source/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.am.common:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)

libgalprop.a: $(libgalprop_a_OBJECTS) $(libgalprop_a_DEPENDENCIES) $(EXTRA_libgalprop_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libgalprop.a
	$(AM_V_AR)$(libgalprop_a_AR) libgalprop.a $(libgalprop_a_OBJECTS) $(libgalprop_a_LIBADD)
	$(AM_V_at)$(RANLIB) libgalprop.a

libskymap.a: $(libskymap_a_OBJECTS) $(libskymap_a_DEPENDENCIES) $(EXTRA_libskymap_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libskymap.a
	$(AM_V_AR)$(libskymap_a_AR) libskymap.a $(libskymap_a_OBJECTS) $(libskymap_a_LIBADD)
	$(AM_V_at)$(RANLIB) libskymap.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

changeGasMaps$(EXEEXT): $(changeGasMaps_OBJECTS) $(changeGasMaps_DEPENDENCIES) $(EXTRA_changeGasMaps_DEPENDENCIES) 
	@rm -f changeGasMaps$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(changeGasMaps_OBJECTS) $(changeGasMaps_LDADD) $(LIBS)

galprop$(EXEEXT): $(galprop_OBJECTS) $(galprop_DEPENDENCIES) $(EXTRA_galprop_DEPENDENCIES) 
	@rm -f galprop$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(galprop_OBJECTS) $(galprop_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AvXCO.Po
include ./$(DEPDIR)/B_field_3D_model.Po
include ./$(DEPDIR)/B_field_model.Po
include ./$(DEPDIR)/Configure.Po
include ./$(DEPDIR)/Coordinate.Po
include ./$(DEPDIR)/D_pp.Po
include ./$(DEPDIR)/D_xx.Po
include ./$(DEPDIR)/Distribution.Po
include ./$(DEPDIR)/DistributionFunction.Po
include ./$(DEPDIR)/ErrorLogger.Po
include ./$(DEPDIR)/GCR_data.Po
include ./$(DEPDIR)/GalacticRadiationField.Po
include ./$(DEPDIR)/Galaxy.Po
include ./$(DEPDIR)/Galdef.Po
include ./$(DEPDIR)/Galprop.Po
include ./$(DEPDIR)/GasEmissFunction.Po
include ./$(DEPDIR)/GasFunction.Po
include ./$(DEPDIR)/He_to_H_CS.Po
include ./$(DEPDIR)/HealpixBaseExtended.Po
include ./$(DEPDIR)/IC_anisotropy_factor.Po
include ./$(DEPDIR)/Kcapture_cs.Po
include ./$(DEPDIR)/Particle.Po
include ./$(DEPDIR)/RadiationField.Po
include ./$(DEPDIR)/Region.Po
include ./$(DEPDIR)/SkySelection.Po
include ./$(DEPDIR)/Skymap.Po
include ./$(DEPDIR)/SkymapFitsio.Po
include ./$(DEPDIR)/Timer.Po
include ./$(DEPDIR)/blattnig.Po
include ./$(DEPDIR)/calculate_GCR_chisq.Po
include ./$(DEPDIR)/changeGasMaps.Po
include ./$(DEPDIR)/cr_luminosity.Po
include ./$(DEPDIR)/create_SNR.Po
include ./$(DEPDIR)/create_galaxy.Po
include ./$(DEPDIR)/create_gcr.Po
include ./$(DEPDIR)/create_transport_arrays.Po
include ./$(DEPDIR)/decayed_cross_sections.Po
include ./$(DEPDIR)/e_KN_loss.Po
include ./$(DEPDIR)/electrons_normalize.Po
include ./$(DEPDIR)/energy_losses.Po
include ./$(DEPDIR)/eprop.Po
include ./$(DEPDIR)/fort_interface1.Po
include ./$(DEPDIR)/fort_interface2.Po
include ./$(DEPDIR)/galpropMain.Po
include ./$(DEPDIR)/galprop_internal.Po
include ./$(DEPDIR)/gauss.Po
include ./$(DEPDIR)/gen_DM_skymap.Po
include ./$(DEPDIR)/gen_DM_source.Po
include ./$(DEPDIR)/gen_IC_emiss.Po
include ./$(DEPDIR)/gen_IC_skymap.Po
include ./$(DEPDIR)/gen_bremss_emiss.Po
include ./$(DEPDIR)/gen_bremss_ionized_skymap.Po
include ./$(DEPDIR)/gen_bremss_skymap.Po
include ./$(DEPDIR)/gen_ionization_rate.Po
include ./$(DEPDIR)/gen_isrf_energy_density.Po
include ./$(DEPDIR)/gen_knock_on_electron_source.Po
include ./$(DEPDIR)/gen_luminosity.Po
include ./$(DEPDIR)/gen_pi0_decay_emiss.Po
include ./$(DEPDIR)/gen_pi0_decay_skymap.Po
include ./$(DEPDIR)/gen_secondary_antiproton_source.Po
include ./$(DEPDIR)/gen_secondary_positron_source.Po
include ./$(DEPDIR)/gen_secondary_proton_source.Po
include ./$(DEPDIR)/gen_secondary_source.Po
include ./$(DEPDIR)/gen_synch_emiss.Po
include ./$(DEPDIR)/gen_synch_skymap.Po
include ./$(DEPDIR)/gen_tertiary_antiproton_source.Po
include ./$(DEPDIR)/integ.Po
include ./$(DEPDIR)/ionization_bethe.Po
include ./$(DEPDIR)/isrf_energy_density.Po
include ./$(DEPDIR)/kamae.Po
include ./$(DEPDIR)/kinematic.Po
include ./$(DEPDIR)/los_integration.Po
include ./$(DEPDIR)/nH.Po
include ./$(DEPDIR)/nuc_package.Po
include ./$(DEPDIR)/nuclei_normalize.Po
include ./$(DEPDIR)/nucleon_cs.Po
include ./$(DEPDIR)/print_BC.Po
include ./$(DEPDIR)/propagate_particles.Po
include ./$(DEPDIR)/propel.Po
include ./$(DEPDIR)/propel_diagnostics.Po
include ./$(DEPDIR)/protri.Po
include ./$(DEPDIR)/read_gas_maps.Po
include ./$(DEPDIR)/read_gcr.Po
include ./$(DEPDIR)/read_isrf.Po
include ./$(DEPDIR)/sigma_boron_dec_heinbach_simon.Po
include ./$(DEPDIR)/source_SNR_event.Po
include ./$(DEPDIR)/source_SNR_event_vec.Po
include ./$(DEPDIR)/source_distribution.Po
include ./$(DEPDIR)/store_DM_emiss.Po
include ./$(DEPDIR)/store_DM_skymap.Po
include ./$(DEPDIR)/store_IC_emiss.Po
include ./$(DEPDIR)/store_IC_skymap.Po
include ./$(DEPDIR)/store_IC_skymap_comp.Po
include ./$(DEPDIR)/store_bremss_H2R_skymap.Po
include ./$(DEPDIR)/store_bremss_HII_skymap.Po
include ./$(DEPDIR)/store_bremss_HIR_skymap.Po
include ./$(DEPDIR)/store_bremss_emiss.Po
include ./$(DEPDIR)/store_bremss_ionized_skymap.Po
include ./$(DEPDIR)/store_bremss_skymap.Po
include ./$(DEPDIR)/store_gcr.Po
include ./$(DEPDIR)/store_gcr_full.Po
include ./$(DEPDIR)/store_gcr_source_functions.Po
include ./$(DEPDIR)/store_ionization_rate.Po
include ./$(DEPDIR)/store_mapcube_skymap.Po
include ./$(DEPDIR)/store_pi0_decay_H2R_skymap.Po
include ./$(DEPDIR)/store_pi0_decay_HII_skymap.Po
include ./$(DEPDIR)/store_pi0_decay_HIR_skymap.Po
include ./$(DEPDIR)/store_pi0_decay_emiss.Po
include ./$(DEPDIR)/store_pi0_decay_skymap.Po
include ./$(DEPDIR)/store_skymap.Po
include ./$(DEPDIR)/store_synch_emiss.Po
include ./$(DEPDIR)/store_synch_skymap.Po
include ./$(DEPDIR)/synchrotron_emissivity.Po
include ./$(DEPDIR)/synchrotron_emissivity_B_field.Po
include ./$(DEPDIR)/synchrotron_emissivity_aws.Po
include ./$(DEPDIR)/test_Distribution.Po
include ./$(DEPDIR)/test_Particle.Po
include ./$(DEPDIR)/test_float_accuracy.Po
include ./$(DEPDIR)/test_isotope_cs.Po
include ./$(DEPDIR)/test_nH.Po
include ./$(DEPDIR)/test_source_SNR_event.Po
include ./$(DEPDIR)/test_suite.Po
include ./$(DEPDIR)/test_sync_package.Po
include ./$(DEPDIR)/tridag.Po
include ./$(DEPDIR)/tridag_ext.Po
include ./$(DEPDIR)/tridag_sym.Po
include ./$(DEPDIR)/tridag_sym_ext.Po

.cc.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libgalprop_a_includeHEADERS: $(libgalprop_a_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libgalprop_a_include_HEADERS)'; test -n "$(libgalprop_a_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libgalprop_a_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libgalprop_a_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libgalprop_a_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgalprop_a_includedir)" || exit $$?; \
	done

uninstall-libgalprop_a_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgalprop_a_include_HEADERS)'; test -n "$(libgalprop_a_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libgalprop_a_includedir)'; $(am__uninstall_files_from_dir)
install-libskymap_a_includeHEADERS: $(libskymap_a_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libskymap_a_include_HEADERS)'; test -n "$(libskymap_a_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libskymap_a_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libskymap_a_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libskymap_a_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libskymap_a_includedir)" || exit $$?; \
	done

uninstall-libskymap_a_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libskymap_a_include_HEADERS)'; test -n "$(libskymap_a_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libskymap_a_includedir)'; $(am__uninstall_files_from_dir)
install-nobase_nodist_includeHEADERS: $(nobase_nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libgalprop_a_includedir)" "$(DESTDIR)$(libskymap_a_includedir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libgalprop_a_includeHEADERS \
	install-libskymap_a_includeHEADERS \
	install-nobase_nodist_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES \
	uninstall-libgalprop_a_includeHEADERS \
	uninstall-libskymap_a_includeHEADERS \
	uninstall-nobase_nodist_includeHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLIBRARIES clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLIBRARIES \
	install-libgalprop_a_includeHEADERS \
	install-libskymap_a_includeHEADERS install-man \
	install-nobase_nodist_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-libLIBRARIES \
	uninstall-libgalprop_a_includeHEADERS \
	uninstall-libskymap_a_includeHEADERS \
	uninstall-nobase_nodist_includeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
